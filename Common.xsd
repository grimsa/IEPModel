<?xml version="1.0" encoding="UTF-8"?>
<!--**************************************************************************
	schema: Common.xsd v 2.0
	Author(s):
	v 2.0 Michael Palmquist (SolarNexus Inc)
	v 1.x Michael Palmquist (SolarNexus Inc), Devan Johnson (kW Engineering), Paul Cobb (SaveEnergy123)
	Description: Schema defines a set of object types that are re-used across the set of IEP Model schemas.
	**************************************************************************** -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.iepmodel.net"
    elementFormDefault="qualified" targetNamespace="http://www.iepmodel.net"
    attributeFormDefault="unqualified" version="1.0">
    <xs:complexType name="dataOriginator">
        <xs:annotation>
            <xs:documentation>This is used to keep track from where the data was obtained.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is used as a general descript, name, etc. to be used in place of the Participant </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="originiationDate" type="xs:date"/>
        </xs:sequence>
        <xs:attribute name="participantID" type="xs:IDREF">
            <xs:annotation>
                <xs:documentation>This references the specific Participant</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="applicationId">
        <xs:annotation>
            <xs:documentation>This is used to tag schemas elements with a specific application ID. Any element may have multiple application IDs</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="idValue" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is the applications ID tag</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="idSource" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is a simple description of the source of the information</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="zipCode">
        <xs:restriction base="xs:string">
            <xs:pattern value="\d{5}|\d{5}-\d{4}"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="addressUseEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MAILING"/>
            <xs:enumeration value="SHIPPING"/>
            <xs:enumeration value="PROJECT"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="address">
        <xs:sequence>
            <xs:element minOccurs="0" name="addressUse" type="addressUseEnum">
                <xs:annotation>
                    <xs:documentation>Use to describe the use of the address, for example, "Mailing," "Shipping," "Project," etc)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="line1" type="xs:string" minOccurs="0"/>
            <xs:element maxOccurs="1" minOccurs="0" name="line2" type="xs:string"/>
            <xs:element name="city" type="xs:string" minOccurs="0"/>
            <xs:element maxOccurs="1" minOccurs="0" name="county" type="xs:string"/>
            <xs:element minOccurs="0" name="state" type="xs:string"/>
            <xs:element name="zipCode" type="zipCode" maxOccurs="1" minOccurs="0"/>
            <xs:element minOccurs="0" name="elevation" nillable="true" type="xs:float">
                <xs:annotation>
                    <xs:documentation>This is in feer</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="latitude" nillable="true" type="xs:float">
                <xs:annotation>
                    <xs:documentation>This is in degrees</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="longitude" nillable="true" type="xs:float">
                <xs:annotation>
                    <xs:documentation>This is in degrees</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="mapUrl" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Optional URL pointing to an online mapping service that shows the location.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="realEstateClassificationEnum">
        <xs:annotation>
            <xs:documentation>This refers to the property type or what is sometimes referred to as real estate type. Commercial is synonymous with non-residential. 

This is also used for PowerClerk/CSI program</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="COMMERCIAL"/>
            <xs:enumeration value="RESIDENTIAL"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="site">
        <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="location" type="address">
                <xs:annotation>
                    <xs:documentation>Describes the project's address, and geo location (lat / long / elevation).

Note that if there are more than one street address, the model forces these to be separate Sites/Projects. If a Building on the project site has more than one street address, only one is required to identify the location.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="realEstateClassification"
                type="realEstateClassificationEnum"/>
            <xs:element maxOccurs="1" minOccurs="0" name="assessorsParcelNumber" type="xs:string"/>
            <xs:element maxOccurs="1" minOccurs="0" name="authorityHavingJurisdiction"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>Also known as "AHJ."  This is the city, county, or other authority with jurisdiction over building permits and inspections.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="customerOwnsProperty" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Is the project buyer the owner of the site?</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="customerRelationToPropertyOwner"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>If the project customer is not the owner of the site property, what is the relationship to the owner?  This is required for CSI incentive application.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="broadbandInternetAccessible"
                type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Does the site have, or can get broadband internet? Dial-up only probably won't work.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="weather" type="siteWeatherData"/>
            <xs:element maxOccurs="1" minOccurs="0" name="existingGenerationCapability"
                type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Site has existing generation capability, including non-functioning &amp;/or emergency back-up? Required for CSI Rebate Reservation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="existingGenerationDescription"
                type="xs:string">
                <xs:annotation>
                    <xs:documentation>If site has existing generation, describe the technology. Required for CSI Rebate Reservation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="notes" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:complexType name="occupantConstraint">
        <xs:annotation>
            <xs:documentation>Use to describe various types of contstraints for project site occupants.  Contractor may use this information as requirements for his solution definition.</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element minOccurs="0" name="constraintCategory">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Health"/>
                        <xs:enumeration value="Comfort"/>
                        <xs:enumeration value="EnergyEfficiency"/>
                        <xs:enumeration value="UpfrontCosts"/>
                        <xs:enumeration value="OperatingCosts"/>
                        <xs:enumeration value="CO2Reduction"/>
                        <xs:enumeration value="DollarSavings"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="health">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>This is used to describe health constraints such as specific allergies</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="description" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="severity" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="priority">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>Scale of 1 to 10. </xs:documentation>
                    </xs:annotation>
                    <xs:sequence maxOccurs="unbounded" minOccurs="0">
                        <xs:element maxOccurs="1" minOccurs="1" name="priorityLevel" type="xs:int"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="priorityType" type="xs:string"
                        />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="upfrontCosts">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="maximumUpfrontCosts"
                            type="xs:float"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="energyEfficiency">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="requestedLevelOfEfficiency"
                            type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="comfort">
                <xs:complexType>
                    <xs:annotation>
                        <xs:documentation>This is used to describe specific comfort constraints in the building such as drafts, ventilation, hot and cold spots, etc.</xs:documentation>
                    </xs:annotation>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="name" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="description" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="1" name="severity" type="xs:string"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="operatingCosts">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="maximumOperatingCosts"
                            type="xs:float"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="co2Reduction">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1" name="requestedCO2ReductionDesc"
                            type="xs:string">
                            <xs:annotation>
                                <xs:documentation>This is a descriptive element and may be represented in several ways</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="1"
                            name="requestedCO2ReductionInTonsPerYear" type="xs:float"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="dollarSavings">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="1"
                            name="expectedTotalDollarSavingsInOperatingCosts" type="xs:float"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="consumerFeedback">
        <xs:sequence>
            <xs:element minOccurs="0" name="productRating">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="0" name="comments" type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Fair Good Great</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" minOccurs="0" name="easeOfUse" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="qualityOfProduct"
                            type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="satisfactionLevel"
                            type="xs:string">
                            <xs:annotation>
                                <xs:documentation>Fair Good Excellent or 5 star rating?</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element minOccurs="0" name="serviceProviderRating">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="1" minOccurs="0" name="budgetSatisfaction"
                            type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="compliments" type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="overallSatisfaction"
                            type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="qualityOfWork" type="xs:int"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="timelinessSatisfaction"
                            type="xs:string"/>
                        <xs:element maxOccurs="1" minOccurs="0" name="suggestions" type="xs:string"
                        />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="buildingClass">
        <xs:annotation>
            <xs:documentation>The building classification indicates the type of Residential or Commercial property. Each of those types also involve multiple classifications.  
                
Residential consists of Single-Family and Multi-Family.
                
Commercial consists of enumerations of common commercial property classifications from three organizations: CEUS, DEER and EnergyStar (US DOE).

This is contained in Common to allow for use in both Building.xsd and UtilityService.xsd</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="residential" type="residentialEnum"> </xs:element>
            <xs:element name="commercial" type="commercialBuildingClass"/>
        </xs:choice>
    </xs:complexType>
    <xs:simpleType name="residentialEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SINGLE-FAMILY"/>
            <xs:enumeration value="MULTI-FAMILY"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="commercialBuildingClass">
        <xs:sequence>
            <xs:element name="ceusClassification" minOccurs="0" type="ceusBuildingEnum"> </xs:element>
            <xs:element name="deerClassification" minOccurs="0" type="deerBuildingEnum"> </xs:element>
            <xs:element minOccurs="0" name="energyStarClassification" type="energyStarBuildingEnum">
                <xs:annotation>
                    <xs:documentation/>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="ceusBuildingEnum">
        <xs:annotation>
            <xs:documentation>The California Commercial End-Use Survey (CEUS) is a comprehensive study of
                commercial sector energy use, primarily designed to support the state’s energy
                demand forecasting activities. http://www.energy.ca.gov/ceus/
                This enumeration lists the CEUS building types.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="COLLEGE"/>
            <xs:enumeration value="FOOD_STORE"/>
            <xs:enumeration value="HEALTH"/>
            <xs:enumeration value="LARGE_OFFICE_(>=30K_FT2)"/>
            <xs:enumeration value="LODGING"/>
            <xs:enumeration value="MISCELLANEOUS"/>
            <xs:enumeration value="REFRIGERATED_WAREHOUSE"/>
            <xs:enumeration value="RESTAURANT"/>
            <xs:enumeration value="RETAIL"/>
            <xs:enumeration value="SCHOOL"/>
            <xs:enumeration value="SMALL_OFFICE_(&lt;30K_FT2)"/>
            <xs:enumeration value="UNREFRIGERATED_WAREHOUSE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="deerBuildingEnum">
        <xs:annotation>
            <xs:documentation>The Database for Energy Efficient Resources (DEER) is a California Energy Commission and California Public Utilities Commission (CPUC) sponsored database designed to provide well-documented estimates of energy and peak demand savings values, measure costs, and effective useful life (EUL) all with one data source.
                http://www.energy.ca.gov/deer/
                
                This list can be found in the "key" sheet of the excel file from the DEER website at the following link:
                http://www.deeresources.com/deer0911planning/downloads/DEER2008%20Database%20Description%20%28version%202.05%29.xls</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="EDUCATION-COMMUNITY_COLLEGE"/>
            <xs:enumeration value="EDUCATION-PRIMARY_SCHOOL"/>
            <xs:enumeration value="EDUCATION-SECONDARY_SCHOOL"/>
            <xs:enumeration value="EDUCATION-UNIVERSITY"/>
            <xs:enumeration value="GROCERY"/>
            <xs:enumeration value="HEALTH/MEDICAL-HOSPITAL"/>
            <xs:enumeration value="HEALTH/MEDICAL-NURSING HOME"/>
            <xs:enumeration value="LODGING-GUEST_ROOMS"/>
            <xs:enumeration value="LODGING-HOTEL"/>
            <xs:enumeration value="LODGING-MOTEL"/>
            <xs:enumeration value="MANUFACTURING-LIGHT_INDUSTRIAL"/>
            <xs:enumeration value="OFFICE-LARGE"/>
            <xs:enumeration value="OFFICE-SMALL"/>
            <xs:enumeration value="RESIDENTIAL-INDOOR"/>
            <xs:enumeration value="RESIDENTIAL-OUTDOOR"/>
            <xs:enumeration value="RESTAURANT-FAST-FOOD"/>
            <xs:enumeration value="RESTAURANT-SIT-DOWN"/>
            <xs:enumeration value="RETAIL-3-STORY_LARGE"/>
            <xs:enumeration value="RETAIL-SINGLE-STORY_LARGE"/>
            <xs:enumeration value="RETAIL-SMALL"/>
            <xs:enumeration value="STORAGE-CONDITIONED"/>
            <xs:enumeration value="STORAGE-UNCONDITIONED"/>
            <xs:enumeration value="WAREHOUSE-REFRIGERATED"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="energyStarBuildingEnum">
        <xs:annotation>
            <xs:documentation>Details of how the Energy Star Portfolio Manager tool rates buildings can be found at the following url:
                http://www.energystar.gov/index.cfm?c=evaluate_performance.pt_neprs_learn
                
                When benchmarking a mixed-use building, Portfolio Recommends defining the building as the space type that accounts for 50% or more of the floor area to get an accurate benchmark. Details can be found at the following url:
                http://www.energystar.gov/index.cfm?c=eligibility.bus_portfoliomanager_eligibility_mixed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="OFFICE"/>
            <xs:enumeration value="BANK/FINANCIAL_INSTITUTION"/>
            <xs:enumeration value="COURTHOUSE"/>
            <xs:enumeration value="DORMITORY/RESIDENCE_HALL"/>
            <xs:enumeration value="K-12_SCHOOL"/>
            <xs:enumeration value="HOSPITAL_(ACUTE_CARE_AND_CHILREN'S)"/>
            <xs:enumeration value="HOUSE_OF_WORSHIP"/>
            <xs:enumeration value="HOTEL"/>
            <xs:enumeration value="RETAIL_STORE"/>
            <xs:enumeration value="SUPERMARKET"/>
            <xs:enumeration value="SENIOR_CARE_FACILITY"/>
            <xs:enumeration value="RESIDENCE_HALLS/DORMITORIE"/>
            <xs:enumeration value="WAREHOUSE"/>
            <xs:enumeration value="MEDICAL_OFFICE"/>
            <xs:enumeration value="WASTEWATER_FACILITY"/>
            <xs:enumeration value="DATA_CENTER"/>
            <xs:enumeration value="SWIMMING_POOL"/>
            <xs:enumeration value="PARKING"/>
            <xs:enumeration value="OTHER"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="space">
        <xs:annotation>
            <xs:documentation>A building consists of one or many spaces. This object provides a high level specification of the building space profile intended for use with Projects and simulations such as SaveEnergy123 and Portfolio Manager.
                
                https://saveenergy123.com/
                
                http://www.energystar.gov/index.cfm?c=evaluate_performance.bus_portfoliomanager
                
ISSUES / TO DO: 
2) get Space documentation from Portfolio Manager
3) To use for benchmarking, need to add in additional operational attributes per space.  The set of attributes differs based on PortfolioMgrSpaceType.
                </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="name" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is simply a descriptive name, typically a common name used for the system.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Place for user to include additional notes/description.
                        
                        Examples:
                        - Laundromat, 1st floor
                        - Pop’s Barber shop, 2nd floor
                        - Apartments, floors 3-6
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="newExisting" type="existenceEnum">
                <xs:annotation>
                    <xs:documentation>For items marked as new, they will be added as long as the ESP identifier is not found (error otherwise).  For items marked as existing, only updates will be performed if the ESP identifier is found (error otherwise).  For items marked unknown, they will be created if the ESP identifier is not found and updated if the ESP identifier is found (similar to ABS 1.0)</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="buildingFraction">
                <xs:annotation>
                    <xs:documentation>The fraction of the total building that this space occupies. This is useful for tools including Portfolio Manager:
                        http://www.energystar.gov/index.cfm?c=evaluate_performance.bus_portfoliomanager</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:float">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="spaceClassification" type="buildingClass" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This defines the classification type of the building in terms of residential or non-residential / commercial and further details where relevant.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="espSpaceID" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The identifier for the space as defined in the ESP's system
                        ReqStringTypeLen60?</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="conditionedAreaFractionHeated" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Fraction of GrossFloorArea that is heated.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:float">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="conditionedAreaFractionCooled" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Fraction of GrossFloorArea that is cooled.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:float">
                        <xs:minInclusive value="0"/>
                        <xs:maxInclusive value="1"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberFloorsAboveGround" minOccurs="0" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="dateBuilt" type="xs:date" minOccurs="0" maxOccurs="1"/>
            <xs:element name="maximumNumberPersons" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is the typical maximum occupancy for the building and does not relate to fire codes. This is not currently validated against the NumberAdults, NumberInfants and NumberTeenagers.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberAdults" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is the typical number of adults occupying the building during normal occupation hours.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberTeenagers" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is the typical number of teenagers occupying the building during normal occupation hours. </xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberInfants" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This is the typical number of infants occupying the building during normal occupation hours.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberBathrooms" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This defines the number of bathrooms where a whole bathroom includes toilet and shower, half baths only include toilets.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:float">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberBedrooms" minOccurs="0" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="numberOffices" minOccurs="0" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="numberKitchens">
                <xs:annotation>
                    <xs:documentation>Number of kitchens or cooking environments. 
                        
                        This is an input for certain space types in Energy Star Portfolio Manager.
                        http://www.energystar.gov/index.cfm?c=eligibility.bus_portfoliomanager_space_types#hotel</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:int">
                        <xs:minInclusive value="0"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="numberOfWorkers" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfPCs" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfCashRegisters" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfRooms" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfUnits" type="xs:int"/>
            <xs:element minOccurs="0" name="averageNumberOfResidents" type="xs:int"/>
            <xs:element minOccurs="0" name="residentCapacity" type="xs:int"/>
            <xs:element minOccurs="0" name="seatingCapacity" type="xs:int"/>
            <xs:element minOccurs="0" name="presenceOfCookingFacilities" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfReachInRefrigerators" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfWalkInRefrigerators" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfCommericalWashingMachines" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfResidentialWashingMachines" type="xs:int"/>
            <xs:element minOccurs="0" name="numberOfResidentialElectronicLifts" type="xs:int"/>
            <xs:element minOccurs="0" name="annualITEnergy" type="xs:int"/>
            <xs:element minOccurs="0" name="weekdayOperation" type="xs:boolean"/>
            <xs:element minOccurs="0" name="openWeekends" type="xs:boolean"/>
            <xs:element minOccurs="0" name="exteriorEntrance" type="xs:boolean"/>
            <xs:element minOccurs="0" name="weeklyOperatingHours" type="xs:int"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:complexType name="sizeDouble">
        <xs:annotation>
            <xs:documentation>Represents a 2D size, with a width and a height as doubles</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="width" type="xs:double"/>
            <xs:element name="height" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="size2d">
        <xs:annotation>
            <xs:documentation>Represents a 2D size, with a width and a height</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="width" type="xs:int"/>
            <xs:element name="height" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="geoLocation">
        <xs:annotation>
            <xs:documentation>Geographic location.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="latitude" type="xs:double"/>
            <xs:element name="longitude" type="xs:double"/>
            <xs:element name="altitude" type="xs:double"/>
            <xs:element name="altitudeReference" default="Ground">
                <xs:annotation>
                    <xs:documentation>Reference for 'altitude' element.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:enumeration value="Ground">
                            <xs:annotation>
                                <xs:documentation>The altitude is measured from the ground.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="Ellipsoid">
                            <xs:annotation>
                                <xs:documentation>The altitude is measured from the ellipsoid.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                        <xs:enumeration value="SeaLevel">
                            <xs:annotation>
                                <xs:documentation>The altitude is measured from sea level.</xs:documentation>
                            </xs:annotation>
                        </xs:enumeration>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="point2d">
        <xs:annotation>
            <xs:documentation>A ccordinate location in 2 dimensional space.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="x" type="xs:double"/>
            <xs:element name="y" type="xs:double"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="optional">
            <xs:annotation>
                <xs:documentation>Reference ID for the point. Use to index points and define polygon edges. An edge can be defined by start and end point indices.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="point3d">
        <xs:annotation>
            <xs:documentation>A ccordinate location in 3 dimensional space.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="x" type="xs:double"/>
            <xs:element name="y" type="xs:double"/>
            <xs:element name="z" type="xs:double" minOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID">
            <xs:annotation>
                <xs:documentation>Reference ID for the point. Use to index points and define polygon edges. An edge can be defined by start and end point indices.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="polygon2d">
        <xs:annotation>
            <xs:documentation>A set of points defining a polygon in 2 dimensional space. When used to create an element, that element's name should describe the geometric context for the polygon element. For example, if the polygon2dType is used to define an orthographic projection of a sloped roof face, then the element should be named polygon2dOrthoProjection, for example.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="vertices">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="3" name="vertex" type="point2d"
                        />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="obstruction">
        <xs:annotation>
            <xs:documentation>Any object within a single area, or spanning multiple areas, that obstructs new equipment from being installed within the given area. For example, a rooftop air handler obstructs installation of a new solar array. The coordinate system used to describe the obstruction's footprint is global to the scene of areas described.</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="footprint2dSceneCameraView" type="polygon2d"/>
            <xs:element minOccurs="0" name="footprint2dSceneOrthoProjection" type="polygon2d"/>
            <xs:element minOccurs="0" name="height" type="xs:double"/>
            <xs:element minOccurs="0" name="setback" type="xs:double"/>
        </xs:all>
        <xs:attribute name="id"/>
    </xs:complexType>
    <xs:complexType name="obstruction2dLocal">
        <xs:annotation>
            <xs:documentation>Any object within a single area that obstructs new equipment from being installed within the given area. For example, a rooftop air handler obstructs installation of a new solar array. The coordinate system used to describe this obstruction is unique to the single area that is is contained within.</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element name="name" type="xs:string"/>
            <xs:element minOccurs="0" name="footprint2dLocal" type="polygon2d"/>
            <xs:element minOccurs="0" name="height" type="xs:double"/>
            <xs:element minOccurs="0" name="setback" type="xs:double"/>
        </xs:all>
        <xs:attribute name="id"/>
    </xs:complexType>
    <xs:complexType name="installAreaPolygon2dLocal">
        <xs:annotation>
            <xs:documentation>A 2D representation of an area on a site where equipment, most likely a PV array will be installed. Its coordinate system is limited in scope to only representing this single area and any obstructions that may be contained within it.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="polygon2dLocal" type="polygon2d">
                <xs:annotation>
                    <xs:documentation>A 2 dimensional array area polygon whose point coordinate system is local to only this polygon. This defines actual dimensions of the roof face or ground area, not a projection.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="obstructions">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="obstruction2dLocal" type="obstruction2dLocal"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="polygon3d">
        <xs:annotation>
            <xs:documentation>A set of points defining a polygon in 3 dimensional space.  When used to create an element, that element's name should describe the geometric context for the polygon element. For example, if the polygon3dType is used to define a sloped roof face as one of several roof faces in a larger scene, then the element should be named polygon3dScene, for example.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="vertices">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" minOccurs="3" name="vertex" type="point3d"
                        />
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="angle">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent an angular quantity. Units are degrees.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="angularUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of angular units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="DEGREES"/>
            <xs:enumeration value="IN_12"/>
            <xs:enumeration value="RADIANS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="area">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a two-dimensional spatial quantity (i.e. an area).</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="areaUnitEnum" use="optional" default="SQUARE_METERS">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="areaUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of area units of measurement. Taken directly from gbXML.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="SQUARE_CENTIMETERS"/>
            <xs:enumeration value="SQUARE_FEET"/>
            <xs:enumeration value="SQUARE_INCHES"/>
            <xs:enumeration value="SQUARE_KILOMETERS"/>
            <xs:enumeration value="SQUARE_METERS"/>
            <xs:enumeration value="SQUARE_MILES"/>
            <xs:enumeration value="SQUARE_MILLIMETERS"/>
            <xs:enumeration value="SQUARE_YARDS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="dimension">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a linear spatial quantity (i.e. a length or distance).  Default units are meters.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="dimensionUnitEnum" use="optional" default="METERS">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="dimensionUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of one-dimensional spatial units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CENTIMETERS"/>
            <xs:enumeration value="FEET"/>
            <xs:enumeration value="INCHES"/>
            <xs:enumeration value="KILOMETERS"/>
            <xs:enumeration value="METERS"/>
            <xs:enumeration value="MILES"/>
            <xs:enumeration value="MILLIMETERS"/>
            <xs:enumeration value="YARDS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="efficiency">
        <xs:annotation>
            <xs:documentation>This is a base class used for the efficiency of a system, typically an HVAC system.  Most energy producing and consuming systems and equipment instance this type.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="efficiencyUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as a string This should be used for defining the type value's units if the proper enum is not listed in Unit. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unitDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as a string This should be used for defining the type value's units if the proper enum is not listed in Unit. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="testCondition" type="testConditionEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>This represents the operating conditions (typically certified test conditons or full load) at which the efficiency is realized.  Note that at other conditions, the efficiency may be a different value.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="efficiencyUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of common efficiency units of measurement used in the building solar and energy efficiency industry.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="AFUE">
                <xs:annotation>
                    <xs:documentation>The annual fuel utilization efficiency (AFUE; pronounced 'A'-'Few') is a thermal efficiency measure of combustion equipment like furnaces, boilers, and water heaters. The AFUE differs from the true 'thermal efficiency' in that it is not a steady-state, peak measure of conversion efficiency, but instead attempts to represent the actual, season-long, average efficiency of that piece of equipment, including the operating transients.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="BOILER_EFF">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="COP">
                <xs:annotation>
                    <xs:documentation>The coefficient of performance or COP (sometimes CP), of a heat pump is the ratio of the change in heat at the "output" (the heat reservoir of interest) to the supplied work.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EER">
                <xs:annotation>
                    <xs:documentation>The Energy Efficiency Ratio (EER) of a particular cooling device is the ratio of output cooling (in Btu/hr) to input electrical power (in Watts) at a given operating point (indoor and outdoor temperature and humidity conditions). The EER is related to the coefficient of performance (COP) commonly used in thermodynamics, with the primary difference being that the COP of a cooling device is unit-less: the cooling load and the electrical power needed to run the device are both measured using the same units, e.g. watts. </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="EFFECTIVENESS">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="ENERGY_FACTOR">
                <xs:annotation>
                    <xs:documentation>"Energy Factor is the ratio of useful energy output from the water heater to the total amount of energy delivered to the water heater. The higher the EF is, the more efficient the water heater." - http://www.energystar.gov/index.cfm?c=water_heat.pr_crit_water_heaters

"Energy Factor is a metric that was previously used to compare relative efficiencies of clothes washers. The higher the Energy Factor is, the more efficient the clothes washer is. For clothes washers, Energy Factor is calculated using the following formula:[2]"

Energy Factor = 392 x Volume (ft³) / Annual Energy Usage (kWh) - 
http://www.energystar.gov/index.cfm?fuseaction=clotheswash.display_column_definitions</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FAN_EFF">
                <xs:annotation>
                    <xs:documentation>is this Specific Fan power?</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="HSPF">
                <xs:annotation>
                    <xs:documentation>HSPF (Heating Seasonal Performance Factor) is a term used in the heating and cooling industry. HSPF is specifically used to measure the efficiency of air source heat pumps.

The efficiency of air conditioners are often rated by the Heating Seasonal Performance Factor (HSPF) as defined by the Air Conditioning, Heating, and Refrigeration Institute in its standard 210/240 Performance Rating of Unitary Air-Conditioning and Air-Source Heat Pump Equipment last updated in 2008. </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KW_PER_KW">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="KW_PER_TON">
                <xs:annotation>
                    <xs:documentation>kiloWatts per Ton - power to weight ratio of an engine</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="LUMENS_PER_WATT">
                <xs:annotation>
                    <xs:documentation>The ratio of luminous flux in lumens to power measured in watts. </xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MECHANICAL_EFF">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MOTOR_EFF">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="SEER">
                <xs:annotation>
                    <xs:documentation>The Seasonal Energy Efficiency Ratio (SEER) has the same units of Btu/W·hr, but instead of being evaluated at a single operating condition, it represents the expected overall performance for a typical year's weather in a given location.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="THERMAL_EFF">
                <xs:annotation>
                    <xs:documentation>In thermodynamics, the thermal efficiency is a dimensionless performance measure of a device that uses thermal energy, such as  a boiler, a furnace, or a refrigerator.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="testConditionEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of common test conditions at which solar and building equipment are certified or marketed.  These include:

AHRI - Air-Conditioning, Heating, and
Refrigeration Institute
http://www.ahrinet.org/

FullLoad - full load conditions of the equipment

NEMA - National Electrical Manufacturers Association

PTC - PV USA Test Conditions
STC - Factory Standard Test Conditions
http://www.sanfranciscosolar.com/stc4.html</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="AHRI">
                <xs:annotation>
                    <xs:documentation>Air-Conditioning, Heating and Refrigeration Institute</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FULL_LOAD"/>
            <xs:enumeration value="NEMA">
                <xs:annotation>
                    <xs:documentation>National Electrical Manufacturers Association</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="PTC">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="STC">
                <xs:annotation>
                    <xs:documentation>???</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="volume">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a three-dimensional spatial quantity (i.e. a volume).</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="volumeUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unitDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as a string This should be used for defining the type value's units if the proper enum is not listed in Unit. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="volumeUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of volume units of measurement. Taken directly from gbXML.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CUBIC_CENTIMETERS"/>
            <xs:enumeration value="CUBIC_FEET"/>
            <xs:enumeration value="CUBIC_INCHES"/>
            <xs:enumeration value="CUBIC_KILOMETERS"/>
            <xs:enumeration value="CUBIC_METERS"/>
            <xs:enumeration value="CUBIC_MILES"/>
            <xs:enumeration value="CUBIC_MILLIMETERS"/>
            <xs:enumeration value="CUBIC_YARDS"/>
            <xs:enumeration value="GALLONS"/>
            <xs:enumeration value="LITERS"/>
            <xs:enumeration value="FOOT-ACRES"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="powerUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of common power units of measurement used in the solar and building industry.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="BTU_PER_HOUR"/>
            <xs:enumeration value="BTU_PER_SECOND"/>
            <xs:enumeration value="CANDELA"/>
            <xs:enumeration value="FOOT_CANDLE"/>
            <xs:enumeration value="FOOT_POUND_FORCE_PER_SECOND"/>
            <xs:enumeration value="HORSEPOWER"/>
            <xs:enumeration value="KILOCALORIES_PER_SECOND"/>
            <xs:enumeration value="KILOGRAM_FORCE_METER_PER_SECOND"/>
            <xs:enumeration value="KILOWATT"/>
            <xs:enumeration value="LUMEN"/>
            <xs:enumeration value="WATT"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="powerTypeAndUnitsEnum">
        <xs:annotation>
            <xs:documentation>Power can be measured in numerous ways. This type adds an attributes to clearly call out how this power unit was measured.  This type is defined for use in the benefitValueUnits element.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="powerUnitEnum">
                <xs:attribute name="testCondition" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>The "rating" or list of conditions at which the power was tested.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="fuel" type="energyClassEnum">
                    <xs:annotation>
                        <xs:documentation>Fuel type specified as an enum.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="power">
        <xs:annotation>
            <xs:documentation>This is a base class used to define a power quantity (time rate of change of energy).  Most energy producing or consuming systems and equipment instance this type.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="testCondition" type="xs:string" use="optional">
                    <xs:annotation>
                        <xs:documentation>The "rating" or list of conditions at which the power was tested.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unit" type="powerUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as an enum. This should be used for defining the type value's units. If the proper enum is not listed, please use the UnitDesc field to specify the units. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="kwh" name="unitDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as a string This should be used for defining the type value's units if the proper enum is not listed in Unit. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="fuel" type="energyClassEnum" use="optional"
                    default="ELECTRICITY">
                    <xs:annotation>
                        <xs:documentation>Fuel type specified as an enum. This should be used for defining the type value's fuel. If the proper enum is not listed, please use the FuelDesc field to specify the units. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the FuelDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute default="Electricity" name="fuelDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>FuelType specified as a string. This should be used for defining the type value's fuel if the proper enum is not listed in Fuel. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the FuelDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="energyClassEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of fuels and energy transport media.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="COAL_ANTHRACITE"/>
            <xs:enumeration value="COAL_BITUMINOUS"/>
            <xs:enumeration value="COKE"/>
            <xs:enumeration value="DIESEL"/>
            <xs:enumeration value="DISTRICT_CHILLED_WATER"/>
            <xs:enumeration value="DISTRICT_HOT_WATER"/>
            <xs:enumeration value="DISTRICT_STEAM"/>
            <xs:enumeration value="ELECTRICITY"/>
            <xs:enumeration value="FUEL_OIL"/>
            <xs:enumeration value="FUEL_OIL_(NO_1)">
                <xs:annotation>
                    <xs:documentation>Number 1 fuel oil is similar to kerosene and is the fraction that boils off right after gasoline.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FUEL_OIL_(NO_2)">
                <xs:annotation>
                    <xs:documentation>Number 2 fuel oil is the diesel fuel that trucks and some cars run on, leading to the name "road diesel". It is the same thing as heating oil.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FUEL_OIL_(NO_4)">
                <xs:annotation>
                    <xs:documentation>Number 4 fuel oil is usually a blend of distillate and residual fuel oils, such as No. 2 and 6; however, sometimes it is just a heavy distillate. No. 4 may be classified as diesel, distillate or residual fuel oil.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FUEL_OIL_(NO_5_AND_NO_6)">
                <xs:annotation>
                    <xs:documentation>Number 5 fuel oil and Number 6 fuel oil are called residual fuel oils (RFO) or heavy fuel oils. More Number 6 oil is produced compared to Number 5 oil, the terms heavy fuel oil and residual fuel oil  are sometimes used as names for Number 6. Number 5 and 6 are what remains of the crude oil after gasoline and the distillate fuel oils are extracted through distillation. Number 5 fuel oil is a mixture of 75-80 % Number 6 oil and 25-20% of Number 2 oil. Number 6 oil may also contain a small amount of No. 2 to get it to meet specifications.</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="GEOTHERMAL"/>
            <xs:enumeration value="KEROSENE"/>
            <xs:enumeration value="LIQUID_PROPANE"/>
            <xs:enumeration value="NATURAL_GAS"/>
            <xs:enumeration value="OTHER"/>
            <xs:enumeration value="PROPANE"/>
            <xs:enumeration value="STEAM"/>
            <xs:enumeration value="WOOD"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="energyUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of common energy units of measurement used in the building industry.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="BTU"/>
            <xs:enumeration value="JOULES"/>
            <xs:enumeration value="KILOWATT_HOURS"/>
            <xs:enumeration value="THERMS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="energy">
        <xs:annotation>
            <xs:documentation>This is a base class used for defining an energy quantity. System objects are among those that instance this type.
                
                Note that Title24 &amp; HPXML uses "EnergyType" as their Enums name so we followed suit.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="energyUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as an enum. This should be used for defining the type value's units. If the proper enum is not listed, please use the UnitDesc field to specify the units. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unitDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as a string This should be used for defining the type value's units if the proper enum is not listed in Unit. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="fuel" type="energyClassEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Fuel type specified as an enum. This should be used for defining the type value's fuel. If the proper enum is not listed, please use the FuelDesc field to specify the units. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the FuelDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="fuelDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>FuelType specified as a string. This should be used for defining the type value's fuel if the proper enum is not listed in Fuel. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the FuelDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="temperatureUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of temperature units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CELSIUS">
                <xs:annotation>
                    <xs:documentation>Celsius</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="FAHRENHEIT">
                <xs:annotation>
                    <xs:documentation>Fahrenheit</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="temperature">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a temperature quantity.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="temperatureUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="pressureUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of pressure units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="ATMOSPHERES"/>
            <xs:enumeration value="CENTIMETERS_OF_H2O"/>
            <xs:enumeration value="CENTIMETERS_OF_MERCURY"/>
            <xs:enumeration value="INCHES_OF_H2O"/>
            <xs:enumeration value="INCHES_OF_MERCURY"/>
            <xs:enumeration value="KPA">
                <xs:annotation>
                    <xs:documentation>kiloPascals</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
            <xs:enumeration value="MILLIMETERS_OF_MERCURY"/>
            <xs:enumeration value="PASCALS"/>
            <xs:enumeration value="PSI">
                <xs:annotation>
                    <xs:documentation>Pounds per Square Inch</xs:documentation>
                </xs:annotation>
            </xs:enumeration>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="pressure">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a pressure quantity.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="pressureUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="flowUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of (fluid) flow units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="CFM"/>
            <xs:enumeration value="CUBIC_M_PER_HR"/>
            <xs:enumeration value="CUBIC_M_PER_MIN"/>
            <xs:enumeration value="GPH"/>
            <xs:enumeration value="GPM"/>
            <xs:enumeration value="L_PER_SEC"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="flow">
        <xs:annotation>
            <xs:documentation>This is a base class used for defining the flow rate of a fluid (volumetric rate of change with respect to time). Distribution system is a example of an object that instances this type.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="flowUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="weightUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of weight units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="KILOGRAMS"/>
            <xs:enumeration value="POUNDS"/>
            <xs:enumeration value="TONS"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="weight">
        <xs:annotation>
            <xs:documentation>This is a base class for defining a weight quantity. Equipment objects instance this type.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="weightUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="velocity">
        <xs:annotation>
            <xs:documentation>This is a base class used for defining a velocity quantity.  This is a common design criteria for air flow in ducts (distribution systems).</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="velocityUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="velocityUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of velocity units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="FEET_PER_MINUTE"/>
            <xs:enumeration value="FEET_PER_SECOND"/>
            <xs:enumeration value="KILOMETER_PER_HOUR"/>
            <xs:enumeration value="KNOTS"/>
            <xs:enumeration value="METERS_PER_MINUTE"/>
            <xs:enumeration value="METERS_PER_SECOND"/>
            <xs:enumeration value="MILES_PER_HOUR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="densityUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of density units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="GRAMS_PER_CUBIC_CM"/>
            <xs:enumeration value="KG_PER_CUBIC_M"/>
            <xs:enumeration value="LBS_PER_CUBIC_FT"/>
            <xs:enumeration value="LBS_PER_CUBIC_IN"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="density">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a density quantity.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="densityUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="monetaryUnitEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="$_US_DOLLARS"/>
            <xs:enumeration value="$/KWH"/>
            <xs:enumeration value="$/MWH"/>
            <xs:enumeration value="$/PEAK_KW_LOAD"/>
            <xs:enumeration value="$/THERM"/>
            <xs:enumeration value="$/BTU"/>
            <xs:enumeration value="$/GAL"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="monetary">
        <xs:simpleContent>
            <xs:extension base="xs:float">
                <xs:attribute name="unit" type="monetaryUnitEnum"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="emissionsTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CO2"/>
            <xs:enumeration value="NOX"/>
            <xs:enumeration value="SOX"/>
            <xs:enumeration value="METHANE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="emissionsTypeAndUnitsEnum">
        <xs:annotation>
            <xs:documentation>Emmissions units add an attribute that describes the type of material being emmitted.  This type is defined for use in the benefitValueUnits element.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="weightUnitEnum">
                <xs:attribute name="emissionsType" type="emissionsTypeEnum"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="emissions">
        <xs:simpleContent>
            <xs:extension base="xs:float">
                <xs:attribute name="unit" type="weightUnitEnum">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as an enum. This should be used for defining the type value's units. If the proper enum is not listed, please use the UnitDesc field to specify the units. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="unitDesc" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement specified as a string This should be used for defining the type value's units if the proper enum is not listed in Unit. These are all optional attributes in order to allow for a simplified value descriptions since these are used throughout the IEP schemas. Additionally the UnitDesc may contain a default type.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="emissionsType" type="emissionsTypeEnum"/>
                <xs:attribute name="emissionsDesc" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="waterUnitsEnum">
        <xs:simpleContent>
            <xs:extension base="volumeUnitEnum"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="timeUnitEnum">
        <xs:annotation>
            <xs:documentation>This is an enumeration of time units of measurement.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="DAY"/>
            <xs:enumeration value="HOUR"/>
            <xs:enumeration value="MINUTE"/>
            <xs:enumeration value="MONTH"/>
            <xs:enumeration value="SECOND"/>
            <xs:enumeration value="WEEK"/>
            <xs:enumeration value="YEAR"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="timePeriod">
        <xs:simpleContent>
            <xs:extension base="xs:decimal">
                <xs:attribute name="timeUnits" type="timeUnitEnum" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="time">
        <xs:annotation>
            <xs:documentation>This is a base class used to represent a time quantity. A use case is in the lighting system lamp life.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:time">
                <xs:attribute name="unit" type="timeUnitEnum" use="optional">
                    <xs:annotation>
                        <xs:documentation>Unit of measurement.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="timePeriodEnum">
        <xs:annotation>
            <xs:documentation>An enumeration of time periods.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="HOURLY"/>
            <xs:enumeration value="DAILY"/>
            <xs:enumeration value="WEEKLY"/>
            <xs:enumeration value="MONTHLY"/>
            <xs:enumeration value="ANNUALLY"/>
            <xs:enumeration value="JAN"/>
            <xs:enumeration value="FEB"/>
            <xs:enumeration value="MAR"/>
            <xs:enumeration value="APR"/>
            <xs:enumeration value="MAY"/>
            <xs:enumeration value="JUN"/>
            <xs:enumeration value="JUL"/>
            <xs:enumeration value="AUG"/>
            <xs:enumeration value="SEP"/>
            <xs:enumeration value="OCT"/>
            <xs:enumeration value="NOV"/>
            <xs:enumeration value="DEC"/>
            <xs:enumeration value="BILLING_PERIOD"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="calendarMonthEnum">
        <xs:annotation>
            <xs:documentation>Enumeration of the 12 calendar months.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="JAN"/>
            <xs:enumeration value="FEB"/>
            <xs:enumeration value="MAR"/>
            <xs:enumeration value="APR"/>
            <xs:enumeration value="MAY"/>
            <xs:enumeration value="JUN"/>
            <xs:enumeration value="JUL"/>
            <xs:enumeration value="AUG"/>
            <xs:enumeration value="SEP"/>
            <xs:enumeration value="OCT"/>
            <xs:enumeration value="NOV"/>
            <xs:enumeration value="DEC"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="otherUnits">
        <xs:simpleContent>
            <xs:extension base="xs:string"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dataValue">
        <xs:annotation>
            <xs:documentation>An element for capturing a data value with optional set of attributes for describing that value (date, time, name). For example, use to capture simple site audit data from data loggers, or to describe a series of monthly energy outputs for a PV System.

Notes: to record On/Off data, use 0 for ON, and 1 for OFF. </xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:float">
                <xs:attribute name="periodName" type="timePeriodEnum">
                    <xs:annotation>
                        <xs:documentation>An optional name for the Period in which the value was captured. Examples:  If Value is associated with a specific calendar month, then this attribute might be the month's name. If the value is an annual value, then the attribute might be "Annually"</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="periodLength" type="xs:decimal">
                    <xs:annotation>
                        <xs:documentation>When data value is associated with a duration of time, this number describes its length.  Note that Units must be described in an associated TimeUnit attribute within the element where this DataValue resides.

Useful when defining energy billing periods that do not correspond to calendar months.  Use this attribute to capture the number of days in the billing period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="category" type="xs:string">
                    <xs:annotation>
                        <xs:documentation>An optional name for classifying the value. For example, energy bills frequently break the consumption down by time of use period. This category can be used to classify that time of use period.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="date" type="xs:date">
                    <xs:annotation>
                        <xs:documentation>This is the calendar date associated with the value. Typically used when DataValueType is used for site audit datalogging.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="time" type="xs:time">
                    <xs:annotation>
                        <xs:documentation>This is the time of day associated with the value. Typically used when DataValueType is used for site audit datalogging.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="benefitValueUnits">
        <xs:annotation>
            <xs:documentation>Describes the type of benefit being quanitified and its units (for example: energy, power, emissions, time, etc)</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="energy" type="energyUnitEnum"/>
            <xs:element name="money" type="monetaryUnitEnum"> </xs:element>
            <xs:element name="power" type="powerTypeAndUnitsEnum"> </xs:element>
            <xs:element name="emissions" type="emissionsTypeAndUnitsEnum"> </xs:element>
            <xs:element name="water" type="waterUnitsEnum"> </xs:element>
            <xs:element name="time" type="timeUnitEnum"/>
            <xs:element name="other" type="otherUnits"> </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:simpleType name="benefitCategoryEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ENERGY_PRODUCED"/>
            <xs:enumeration value="ENERGY_OFFSET/SAVED"/>
            <xs:enumeration value="EMISSIONS_OFFSET/SAVED"/>
            <xs:enumeration value="INCENTIVE-REBATE/BUYDOWN"/>
            <xs:enumeration value="INCENTIVE-PRODUCTION-BASED_INCENTIVE"/>
            <xs:enumeration value="INCENTIVE-RENEWABLE_ENERGY_CREDIT"/>
            <xs:enumeration value="INCENTIVE-FEED-IN_TARIFF"/>
            <xs:enumeration value="INCENTIVE-FEDERAL_TAX_CREDIT"/>
            <xs:enumeration value="INCENTIVE-STATE_TAX_CREDIT"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="benefit">
        <xs:annotation>
            <xs:documentation>This type is used to collect a specific type of benefit i.e. Estimated, Measured, or Incentive and it's associated Method, source and Author.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Names the specific benefit (or cost).

If Benefit is an incentive, this should be the Name of the incentive program.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="description" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Optional description. For example, many incentive programs break their pools of money into discrete steps where the payment rates vary (for example, "Residential Step 8").</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="benefitValueUnits" type="benefitValueUnits">
                <xs:annotation>
                    <xs:documentation>This element describes what kind of values are being reported. For example, is it energy, money, emissions, time, other?</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="benefitValues">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element maxOccurs="unbounded" name="benefitValue" type="dataValue">
                            <xs:annotation>
                                <xs:documentation>Describes a Benefit (or cost) amount.

When used for an incentive, this amount is a single incentive payment (assumed to be USD). Typical for capacity or investment based incentives in solar, as well as single year tax credits.

Use the Name attribute to capture optional name for the payment. For example, if the incentive extends over several years, a year number can be assigned to the amount (for example, "Year 1").</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="determinationMethod" type="determinationMethod" minOccurs="0"
                maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>How the benefit was calculated, either Estimated, Measured, or Incentive</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="determinationSource" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Tool used to calculate the benefit.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="determinationAuthor" type="dataOriginator" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Person, date and time that benefit was calculated.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id"/>
        <xs:attribute name="category" use="optional" type="benefitCategoryEnum">
            <xs:annotation>
                <xs:documentation>Describes the category of benefit being described. Typical benefits are financial (for example: incentive payments, utility bill savings, etc) or energy (for example: energy produced or saved).</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="genericValue">
        <xs:simpleContent>
            <xs:extension base="xs:double">
                <xs:attribute name="unit" type="xs:string"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="determinationMethodEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ESTIMATED"/>
            <xs:enumeration value="MEASURED"/>
            <xs:enumeration value="INCENTIVE"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="determinationMethod">
        <xs:sequence>
            <xs:element name="method" type="determinationMethodEnum"/>
            <xs:element name="assumption" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>This allows the documentation of assumptions used in the determination of the benefit, for the example a blended cost of energy instead of a detailed rate schedule analysis for determining energy cost savings</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="frequencyEnum">
        <xs:annotation>
            <xs:documentation/>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="DAILY"/>
            <xs:enumeration value="MONTHLY"/>
            <xs:enumeration value="YEARLY"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="periodicity">
        <xs:choice>
            <xs:element name="oneTime" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>This is the year in which this event occurs relative to implementation.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="recurring">
                <xs:annotation>
                    <xs:documentation>This is the time frame in months of the periodicity of the event.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="duration" type="xs:integer">
                            <xs:annotation>
                                <xs:documentation>This is the duration in months</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element maxOccurs="1" name="frequency" type="frequencyEnum">
                            <xs:annotation>
                                <xs:documentation>This is the frequency of the recurring event.</xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="cost">
        <xs:sequence>
            <xs:element name="cost" type="xs:float" minOccurs="1" maxOccurs="1"/>
            <xs:element name="periodicity" type="periodicity" minOccurs="1" maxOccurs="1"/>
            <xs:element name="description" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>This represents the description of the cost, i.e. maintenance costs, purchase costs, salvage costs, etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="fuelConnector">
        <xs:annotation>
            <xs:documentation>This is the type of connector used for linking in the fuel.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="inputPower">
        <xs:sequence>
            <xs:element name="power" type="power" minOccurs="1" maxOccurs="1"/>
            <xs:element name="fuelConnector" type="fuelConnector" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>
    <xs:simpleType name="terminalTempRatingEnum">
        <xs:annotation>
            <xs:documentation>Enumeration of possible temperature ratings of an equipment's electrical terminals.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="60C"/>
            <xs:pattern value=""/>
            <xs:enumeration value="75C"/>
            <xs:enumeration value="90C"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="nemaRatingEnum">
        <xs:annotation>
            <xs:documentation>NEMA provides ratings on equipment enclosures that describe its protection from weather/elements.

Included in Common.xsd because equipmentDefinition element uses it, else would be in CommonElectrical.xsd.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="3"/>
            <xs:enumeration value="3R"/>
            <xs:enumeration value="4"/>
            <xs:enumeration value="4X"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType abstract="true" name="equipmentDefinition">
        <xs:annotation>
            <xs:documentation>Base definition of an equipment item.  An equipment defintion does not contain any data about a specific instance of a piece of equipment (for example, SerialNumber, DataManufactured, Location, or Condition).  Equipment definitions are extended from this base type (for example "PvModuleDefinition").</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="manufacturer" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Name of the entity who manufactures the equipment.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="modelNumber" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Manufacturer's unique identifier for this model of equipment.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="productFamilyName" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A general name for a group of product models.  Typically each member of the family differs in size or capacity in some way.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="description" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Detailed description of the product. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="mountingStyle" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Describes how the equipment/box is installed (or designed to be installed). This is important for determining components required for interfacing with it.  Suggested values include: Wall Mount, Wall Mount-Surface, Wall Mount-Flush, Pad Mount, Rack Mount, Panel Mount.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="length" type="xs:double">
                <xs:annotation>
                    <xs:documentation>Dimension assumed to be meters.  The long dimension of the equipment's primary envelope (for example, the height of a wall mounted inverter, or the long edge of a PV Module frame).</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="width" type="xs:double">
                <xs:annotation>
                    <xs:documentation>Dimension assumed to be meters.  The width dimension of the equipment's primary envelope (for example, the width of a wall mounted inverter, or the short edge of a PV Module frame).</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="depth" type="xs:double">
                <xs:annotation>
                    <xs:documentation>Dimension assumed to be meters.  The dimension of the equipment's primary envelope perpendicular to the side of its primary interface (for example the thickness of a PV module's frame, or the thickness of a wall mounted inverter from the wall to the front of the inverter.)  Note: PV Module thickness with J-box would be given as part of PvModuleDefintion.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="weight" type="xs:double">
                <xs:annotation>
                    <xs:documentation>Weight of equipment in kilograms (kg).</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="enclosureMaterial" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The material making up the enclosure, such as steel, stainless steel, fiberglass, PVC, etc.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="enclosureNemaRating" type="nemaRatingEnum">
                <xs:annotation>
                    <xs:documentation>Equipment enclosures typically have a NEMA rating that describes its protection from weather/elements.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="terminalTempRating" type="terminalTempRatingEnum"/>
            <xs:element minOccurs="0" name="listingAgency" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Agency under which the equipment was listed per the associated standard.  Examples include ETL, UL, CSA, etc</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="warranty" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Description of Manufacturer's warranty on the equipment.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element minOccurs="0" name="energyStarRated" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Does the equipment have an EnergyStar rating?</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="whereManufactured" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>In which country was the equipment manufactured?  Important to know for some incentive programs, as there may be a requirement for rebates to only be paid on domestically manufactured equipment.</xs:documentation>
                </xs:annotation>
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:maxLength value="255"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
    </xs:complexType>
    <xs:complexType name="serialNumber">
        <xs:annotation>
            <xs:documentation>Manufacturer's assigned identifier for a specific instance of a piece of equipment.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="existenceEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EXISTING"/>
            <xs:enumeration value="NEW"/>
            <xs:enumeration value="UNKNOWN"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="condition">
        <xs:annotation>
            <xs:documentation>A description of the condition of a specific instance of a piece of equipment.  Suggested cvalues might include: brand new, mal-functioning, non-functional, normal wear, other.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="dateManufactured">
        <xs:annotation>
            <xs:documentation>The calendar date on which the manufacturer completed manufacture of this specific piece of equipment. May be limited to the year.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="dayManufactured" type="xs:gDay"/>
            <xs:element minOccurs="0" name="monthManufactured" type="xs:gMonth"/>
            <xs:element name="yearManufactured" type="xs:gYear"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="equipmentLocation">
        <xs:annotation>
            <xs:documentation>A place where equipment can be located on the site or within the building. Can be used to capture site survey data before any systems are designed, and can be used to specify where specific proposed equipment will be placed during implementation. Note, it can be used to describe an existing equipment location in cases of remove and replace scenarios.</xs:documentation>
        </xs:annotation>
        <xs:sequence minOccurs="0" maxOccurs="1">
            <xs:element minOccurs="0" name="name"/>
            <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Detailed description of the location. Use to provide detail that can assist a user in identifying the precise location on a site, access information, etc. Typically use room names, compass directions, etc to identify the location to users.
                        
When used for site surveys, should include what types of equipment are envisioned to be placed here. For eaxample, in PV Systems, equipment might include: DC transition box, DC Combiner, DC Disconnect, Inverter.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="occupied" type="xs:boolean">
                <xs:annotation>
                    <xs:documentation>Useful for describing an equipmentLocation that is either currently occupied, or proposed to be occupied by a given equipment instance.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="exposure" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Describes the elemental exposure of a location.  Important to describe requirements that a piece of equipment must fulfill.  Suggested values include: Indoor-Conditioned, Indoor-Unconditioned, Outdoor-Covered, Outdoor-Uncovered, Rooftop.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="mounting" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Describes the type of mounting that equipment would be required to have to occupy the location.  For example: Wall Mount, Wall Mount-Surface, Wall Mount-Flush, Pad Mount.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="availableWidth" type="xs:float" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Width of the location. Dimension is assumed to be meters. Used to determine how much space is available for both equipment and code mandated clearances.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="availableHeight" type="xs:float" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Height of the location.  Dimension is assumed to be meters. Used to determine how much space is available for both equipment and code mandated clearances.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="availableDepth" type="xs:float" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Depth of the location.  Dimension is assumed to be meters. Used to determine how much space is available for both equipment and code mandated clearances.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="footprint2dSceneOrthoProjection" type="polygon2d">
                <xs:annotation>
                    <xs:documentation>Use to describe the footprint of an equipment location within a 2d scene which may include multiple equipment locations within the same scene. Useful to describe relative locations on a single site.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="footprint2dLocal" type="polygon2d">
                <xs:annotation>
                    <xs:documentation>Use to describe the footprint of an equipment location within a 2d graph that only includes a single equipment location. Useful for describing the shape of a footprint.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="footprint2dSceneCameraView" type="polygon2d">
                <xs:annotation>
                    <xs:documentation>Use to describe the footprint of an equipment location within a 2d graph taken from an aerial camera that only includes a single equipment location. Useful for describing the shape of a footprint.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="zoneIdRef" type="xs:IDREF">
                <xs:annotation>
                    <xs:documentation>The conditioned zone that this EquipmentLocation occupies.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id"/>
    </xs:complexType>
    <xs:complexType name="lastServiced">
        <xs:annotation>
            <xs:documentation>The date that a specific instance of a piece of equipment was last serviced. If it has never been serviced, this should be "N/A".</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:date"> </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="remainingUsefulLife">
        <xs:annotation>
            <xs:documentation>A description of the expected remaining service life for the equipment.</xs:documentation>
        </xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:string"/>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType abstract="true" name="equipmentInstance">
        <xs:annotation>
            <xs:documentation>Base class for any instance of equipment.  Provides a base set of elements common to any single instance of a piece of equipment.  Extend with other elements that are specific to the type of equipment instance being defined. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element minOccurs="0" name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>A user provided name for convenience.  For example, an electrical panel might be the "Main service entry panel", or the "AC combiner panel." A pvModule name might be to identify a specific string or AC branch circuit, for example, "S1-M1" or simply "1" of the total number of modules in the string - typically named in a series.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="serialNumber" type="serialNumber" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Serial number of the equipment</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="dateManufactured" type="dateManufactured">
                <xs:annotation>
                    <xs:documentation>The calendar date on which the manufacturer completed manufacture of this specific piece of equipment. May be limited to the year.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="equipmentLocationIdRef" type="xs:IDREF">
                <xs:annotation>
                    <xs:documentation>A place where the equipment is located on the site or within the building. Equipment locations are defined in a separate element so that the locations can be defined prior to equipment instances.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="condition" type="condition">
                <xs:annotation>
                    <xs:documentation>A description of the equipment's condition.  Suggested values include: brand new, mal-functioning, non-functional, normal wear, other.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="lastServiced" type="lastServiced">
                <xs:annotation>
                    <xs:documentation>The date that the equipment was last serviced, if applicable.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="usefulLife" type="remainingUsefulLife">
                <xs:annotation>
                    <xs:documentation>A description of the expected remaining service life for the equipment.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID" use="required"/>
        <xs:attribute name="equipmentDefinitionIdRef" type="xs:IDREF" use="optional">
            <xs:annotation>
                <xs:documentation>ID Ref of the associated equipment definition for this equipment instance.  For example, in case of a PVModule, this would be the ID of the PvModuleDefinition element that describes this particular PV module instance.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="siteWeatherData">
        <xs:annotation>
            <xs:documentation>Describes what weather data to use in an analysis.  Provides a means to specify a location and type of weather file dataset to use in an analysis.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="stationCategory" type="xs:string" minOccurs="0">
                <xs:annotation>
                    <xs:documentation>Describes the set of weather stations, or geographic cells used to specify the site's weather.  Examples include: WBAN, WMO, NREL 40km Monthly Grid Cell, etc. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="stationId" type="xs:string">
                <xs:annotation>
                    <xs:documentation>The ID number used within the associated Station Category system.  If the Station Category is "WBAN," then this element would contain the WBAN number for the desired station.  For example, San Francisco, CA is WBAN "23234."  And Cairo, Egypt is WMO "623660."</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="weatherDataset" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Type of weather dataset, such as TMY, TMY2, IWEC, etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="highestMonthlyAverageHighTemperature" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Required for configuring inverter circuits. Of the monthly average high temperatures for the site, the highest one.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="recordLowTemperture" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Lowest historic temperature. Required for configuring PV inverter circuits. Used to find highest PV system string voltage when cold and sunny, and therefore longest possible string. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="designWindSpeed" type="xs:integer">
                <xs:annotation>
                    <xs:documentation>Required for PV system structural validations. For CA permitting guidebook, speed must be less than 110mph. This is based from ASCE 7-10, risk category II for CA.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="intervalDataDouble">
        <xs:annotation>
            <xs:documentation>Used in YearIntervalDataDoubleType.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="data" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="dailyInvervalData">
        <xs:annotation>
            <xs:documentation>Used in YearIntervalDataDoubleType.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="1" name="interval"
                type="intervalDataDouble"/>
            <xs:element maxOccurs="1" minOccurs="0" name="sunRiseTime" type="xs:double">
                <xs:annotation>
                    <xs:documentation>The sunrise time, in decimal float, relative to the timezone specified in the root of this data structure.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="sunSetTime" type="xs:double">
                <xs:annotation>
                    <xs:documentation>The sunset time, in decimal float, relative to the timezone specified in the root of this data structure.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="monthlyIntervalData">
        <xs:annotation>
            <xs:documentation>Used in YearIntervalDataDoubleType.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="31" minOccurs="1" name="days" type="dailyInvervalData"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="yearIntervalDataDouble">
        <xs:annotation>
            <xs:documentation>Generic data structure to represent a year in arbitrary time increments.  The default is 1 hour. Breaks down an entire year into equal intervals of time, with the ability to associate a value of type double for each time interval.

TODO: Look at consiolidating with the Schedule schema, also look at newly discovered interval data structures such as http://naesb.org/, and http://collaborate.nist.gov/twiki-sggrid/bin/view/SmartGrid/GreenButtonInitiative</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="12" minOccurs="12" name="months" type="monthlyIntervalData"/>
            <xs:element maxOccurs="1" minOccurs="1" name="intervalsPerHour" type="xs:int">
                <xs:annotation>
                    <xs:documentation>The number of interrvals per hour for the Intervals in each of the days.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="timeZone" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="obstructionElevations">
        <xs:annotation>
            <xs:documentation>A description of the top of an obstruction relative to a define location.  At that location, the obstruction is in the direction define by Azimuth, and the top of that obstruction is at the elevation angle define by Elevation.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="azimuth" type="angle">
                <xs:annotation>
                    <xs:documentation>Direction to the obstruction, in degrees.  0 degrees is North, 90 degress is East, etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="1" name="elevation" type="angle">
                <xs:annotation>
                    <xs:documentation>Elevation, in degrees, of the top of the obstruction.  0 degrees is the horizon, and 90 degress is straight up.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="obstructionElevationsMeasurement">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="obstructionElevation"
                type="obstructionElevations">
                <xs:annotation>
                    <xs:documentation>Collection of the tops of obstructions surrounding the measurement location that define the skylie.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element maxOccurs="1" minOccurs="0" name="measurementLocation2dSceneOrthoProjection"
                type="point2d">
                <xs:annotation>
                    <xs:documentation>Location relative to some define origing, where this measurement was taken.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="timeIntervalShadingMeasurment">
        <xs:annotation>
            <xs:documentation>A description of the shade for an entire year at the measurement locThe year is broken into equal increments (i.e. 1 hour increments) and for each increment the data value is 1 if at that location it is not shaded for that hour, and 0 if at that location it is shaded for that hour.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="1" minOccurs="1" name="intervalShading"
                type="yearIntervalDataDouble"/>
            <xs:element maxOccurs="1" minOccurs="0" name="measurementLocation2dSceneOrthoProjection"
                type="point2d">
                <xs:annotation>
                    <xs:documentation>Location relative to some define origing, where this measurement was taken.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="solarAccessPercentage">
        <xs:annotation>
            <xs:documentation>Collection of solar access by percentage possible. May represent a solar access measurement at a specific coordinate at which the measurement was taken, or may be a summary for an entire area. May be measured using a tool like Solmetric SunEye or Solar Pathfinder, or may be simply estimated.</xs:documentation>
        </xs:annotation>
        <xs:sequence maxOccurs="1" minOccurs="0">
            <xs:element minOccurs="0" name="measurementSource" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Describes the source of the provided solar access percentages, for example: "user estimate", "Solmetric skyline", etc.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Use to describe the measurement. May be the name of a Solmetric Skyline, for example.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessAnnual"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessJan"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessFeb"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessMar"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessApr"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessMay"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessJun"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessJul"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessAug"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessSep"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessOct"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessNov"
                type="xs:int"/>
            <xs:element form="unqualified" maxOccurs="1" minOccurs="0" name="solarAccessDec"
                type="xs:int"/>
            <xs:element minOccurs="0" name="measurementLocation2d" type="point2d">
                <xs:annotation>
                    <xs:documentation>2d coordinate location in the site's scene where the solar access measurement was taken.</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" name="measurementLocation3d" type="point3d">
                <xs:annotation>
                    <xs:documentation>3d coordinate location in the site's scene where the solar access measurement was taken.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="id" type="xs:ID"/>
    </xs:complexType>
    <xs:complexType name="extension">
        <xs:annotation>
            <xs:documentation>Use to extend the content of an instance document to meet a specific use case, particularly useful when needing to incorporate API parameters for working on a basic data set. </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Name" type="xs:string">
                <xs:annotation>
                    <xs:documentation>Because there may be multiptle instances of extension data within a single instance document, this element is used to identify the set of data included in this extension. It could, for example, be the name of the application for which the data is intended. </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="Data">
                <xs:annotation>
                    <xs:documentation>Element contains a sequence of any data elements that are an extension to the base IEP schema.</xs:documentation>
                </xs:annotation>
                <xs:complexType>
                    <xs:sequence>
                        <xs:any maxOccurs="unbounded" namespace="##any" processContents="skip"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
